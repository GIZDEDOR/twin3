// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type AboutDocumentDataSlicesSlice = TeamSliceSlice;

/**
 * Content for about documents
 */
interface AboutDocumentData {
  /**
   * Slice Zone field in *about*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: about.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<AboutDocumentDataSlicesSlice>;
}

/**
 * about document from Prismic
 *
 * - **API ID**: `about`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type AboutDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<Simplify<AboutDocumentData>, "about", Lang>;

type BlogDocumentDataSlicesSlice = NewsGridSliceSlice;

/**
 * Content for Blog documents
 */
interface BlogDocumentData {
  /**
   * Slice Zone field in *Blog*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: blog.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<BlogDocumentDataSlicesSlice>;
}

/**
 * Blog document from Prismic
 *
 * - **API ID**: `blog`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<Simplify<BlogDocumentData>, "blog", Lang>;

type ProjectsDocumentDataSlicesSlice = CaseFiltersSlice;

/**
 * Content for Projects documents
 */
interface ProjectsDocumentData {
  /**
   * Slice Zone field in *Projects*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: projects.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<ProjectsDocumentDataSlicesSlice>;
}

/**
 * Projects document from Prismic
 *
 * - **API ID**: `projects`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProjectsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<ProjectsDocumentData>,
    "projects",
    Lang
  >;

type WelcomeDocumentDataSlicesSlice =
  | CaseSlyderSlice
  | CaseGridSlice
  | StatsGridSlice
  | HeroSliceSlice;

/**
 * Content for WELCOME documents
 */
interface WelcomeDocumentData {
  /**
   * Background video field in *WELCOME*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: welcome.background_video
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/link-to-media
   */
  background_video: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Slice Zone field in *WELCOME*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: welcome.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<WelcomeDocumentDataSlicesSlice> /**
   * Meta Title field in *WELCOME*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: welcome.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *WELCOME*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: welcome.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *WELCOME*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: welcome.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * WELCOME document from Prismic
 *
 * - **API ID**: `welcome`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type WelcomeDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<WelcomeDocumentData>,
    "welcome",
    Lang
  >;

export type AllDocumentTypes =
  | AboutDocument
  | BlogDocument
  | ProjectsDocument
  | WelcomeDocument;

/**
 * Primary content in *CaseFilters → Items*
 */
export interface CaseFiltersSliceDefaultItem {
  /**
   * Заголовок (title) field in *CaseFilters → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Например: MONTI
   * - **API ID Path**: case_filters.items[].title
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Логотип (logo) field in *CaseFilters → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: case_filters.items[].logo
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  logo: prismic.ImageField<never>;

  /**
   * Категория (category) field in *CaseFilters → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: РЕКЛАМА
   * - **API ID Path**: case_filters.items[].category
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  category: prismic.SelectField<"АВАТАРЫ" | "РЕКЛАМА" | "КИНО", "filled">;

  /**
   * Теги (tags) field in *CaseFilters → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Например: CG-ПРОДАКШН, 3D-СКАНИРОВАНИЕ
   * - **API ID Path**: case_filters.items[].tags
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  tags: prismic.KeyTextField;

  /**
   * Hover-видео (video1) field in *CaseFilters → Items*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: case_filters.items[].video1
   * - **Documentation**: https://prismic.io/docs/fields/link-to-media
   */
  video1: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Полное видео (fullVideo) field in *CaseFilters → Items*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: case_filters.items[].fullVideo
   * - **Documentation**: https://prismic.io/docs/fields/link-to-media
   */
  fullVideo: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Название компании (company) field in *CaseFilters → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: case_filters.items[].company
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  company: prismic.KeyTextField;

  /**
   * Описание (description) field in *CaseFilters → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: case_filters.items[].description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * Логотип компании (companyLogo) field in *CaseFilters → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: case_filters.items[].companyLogo
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  companyLogo: prismic.ImageField<never>;

  /**
   * Постер (poster) field in *CaseFilters → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: case_filters.items[].poster
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  poster: prismic.ImageField<never>;

  /**
   * Ссылка на кейс (link) field in *CaseFilters → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: case_filters.items[].link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Default variation for CaseFilters Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CaseFiltersSliceDefault = prismic.SharedSliceVariation<
  "default",
  Record<string, never>,
  Simplify<CaseFiltersSliceDefaultItem>
>;

/**
 * Slice variation for *CaseFilters*
 */
type CaseFiltersSliceVariation = CaseFiltersSliceDefault;

/**
 * CaseFilters Shared Slice
 *
 * - **API ID**: `case_filters`
 * - **Description**: CaseFilters
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CaseFiltersSlice = prismic.SharedSlice<
  "case_filters",
  CaseFiltersSliceVariation
>;

/**
 * Item in *CaseGrid → Default → Primary → cases → Теги*
 */
export interface CaseGridSliceDefaultPrimaryCasesTagsItem {
  /**
   * Тег field in *CaseGrid → Default → Primary → cases → Теги*
   *
   * - **Field Type**: Text
   * - **Placeholder**: например: РЕКЛАМА
   * - **API ID Path**: case_grid.default.primary.cases[].tags[].tag
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  tag: prismic.KeyTextField;
}

/**
 * Item in *CaseGrid → Default → Primary → cases*
 */
export interface CaseGridSliceDefaultPrimaryCasesItem {
  /**
   * Название field in *CaseGrid → Default → Primary → cases*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: case_grid.default.primary.cases[].title
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Видео 1 field in *CaseGrid → Default → Primary → cases*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: case_grid.default.primary.cases[].video1
   * - **Documentation**: https://prismic.io/docs/fields/link-to-media
   */
  video1: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Видео 2 field in *CaseGrid → Default → Primary → cases*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: case_grid.default.primary.cases[].video2
   * - **Documentation**: https://prismic.io/docs/fields/link-to-media
   */
  video2: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Категория field in *CaseGrid → Default → Primary → cases*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: case_grid.default.primary.cases[].category
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  category: prismic.SelectField<"РЕКЛАМА" | "КИНО" | "АВАТАРЫ">;

  /**
   * Теги field in *CaseGrid → Default → Primary → cases*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: case_grid.default.primary.cases[].tags[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  tags: prismic.NestedGroupField<
    Simplify<CaseGridSliceDefaultPrimaryCasesTagsItem>
  >;
}

/**
 * Primary content in *CaseGrid → Default → Primary*
 */
export interface CaseGridSliceDefaultPrimary {
  /**
   * cases field in *CaseGrid → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: case_grid.default.primary.cases[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  cases: prismic.GroupField<Simplify<CaseGridSliceDefaultPrimaryCasesItem>>;
}

/**
 * Default variation for CaseGrid Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CaseGridSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CaseGridSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *CaseGrid*
 */
type CaseGridSliceVariation = CaseGridSliceDefault;

/**
 * CaseGrid Shared Slice
 *
 * - **API ID**: `case_grid`
 * - **Description**: CaseGrid
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CaseGridSlice = prismic.SharedSlice<
  "case_grid",
  CaseGridSliceVariation
>;

/**
 * Primary content in *CategorySlyder → Items*
 */
export interface CaseSlyderSliceDefaultItem {
  /**
   * Category Key field in *CategorySlyder → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Выберите категорию
   * - **Default Value**: scan
   * - **API ID Path**: case_slyder.items[].category_key
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  category_key: prismic.SelectField<
    "scan" | "avatars" | "cg" | "ai-avatars" | "ai-cg",
    "filled"
  >;

  /**
   * Изображение карточки field in *CategorySlyder → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: case_slyder.items[].image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;
}

/**
 * Default variation for CategorySlyder Slice
 *
 * - **API ID**: `default`
 * - **Description**: Категории и карточки в одном слайсе
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CaseSlyderSliceDefault = prismic.SharedSliceVariation<
  "default",
  Record<string, never>,
  Simplify<CaseSlyderSliceDefaultItem>
>;

/**
 * Slice variation for *CategorySlyder*
 */
type CaseSlyderSliceVariation = CaseSlyderSliceDefault;

/**
 * CategorySlyder Shared Slice
 *
 * - **API ID**: `case_slyder`
 * - **Description**: CaseSlyder
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CaseSlyderSlice = prismic.SharedSlice<
  "case_slyder",
  CaseSlyderSliceVariation
>;

/**
 * Primary content in *HeroSlice → Default → Primary*
 */
export interface HeroSliceSliceDefaultPrimary {
  /**
   * Видео фон field in *HeroSlice → Default → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_slice.default.primary.background_video
   * - **Documentation**: https://prismic.io/docs/fields/link-to-media
   */
  background_video: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Showreel видео field in *HeroSlice → Default → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_slice.default.primary.showreel_video
   * - **Documentation**: https://prismic.io/docs/fields/link-to-media
   */
  showreel_video: prismic.LinkToMediaField<prismic.FieldState, never>;
}

/**
 * Default variation for HeroSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroSliceSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *HeroSlice*
 */
type HeroSliceSliceVariation = HeroSliceSliceDefault;

/**
 * HeroSlice Shared Slice
 *
 * - **API ID**: `hero_slice`
 * - **Description**: HeroSlice
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceSlice = prismic.SharedSlice<
  "hero_slice",
  HeroSliceSliceVariation
>;

/**
 * Item in *NewsGridSlice → Default → Primary → News*
 */
export interface NewsGridSliceSliceDefaultPrimaryNewsItem {
  /**
   * Desktop Image field in *NewsGridSlice → Default → Primary → News*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: news_grid_slice.default.primary.news[].images
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  images: prismic.ImageField<never>;

  /**
   * mobile Image field in *NewsGridSlice → Default → Primary → News*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: news_grid_slice.default.primary.news[].mobileImage
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  mobileImage: prismic.ImageField<never>;

  /**
   * title field in *NewsGridSlice → Default → Primary → News*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: news_grid_slice.default.primary.news[].title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * excerpt field in *NewsGridSlice → Default → Primary → News*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: news_grid_slice.default.primary.news[].excerpt
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  excerpt: prismic.RichTextField;

  /**
   * full field in *NewsGridSlice → Default → Primary → News*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: news_grid_slice.default.primary.news[].full
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  full: prismic.RichTextField;

  /**
   * date field in *NewsGridSlice → Default → Primary → News*
   *
   * - **Field Type**: Date
   * - **Placeholder**: YYYY-MM-DD
   * - **API ID Path**: news_grid_slice.default.primary.news[].date
   * - **Documentation**: https://prismic.io/docs/fields/date
   */
  date: prismic.DateField;

  /**
   * tag field in *NewsGridSlice → Default → Primary → News*
   *
   * - **Field Type**: Text
   * - **Placeholder**: e.g. AI-продакшн
   * - **API ID Path**: news_grid_slice.default.primary.news[].tag
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  tag: prismic.KeyTextField;

  /**
   * circle_image field in *NewsGridSlice → Default → Primary → News*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: news_grid_slice.default.primary.news[].circle_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  circle_image: prismic.ImageField<never>;
}

/**
 * Primary content in *NewsGridSlice → Default → Primary*
 */
export interface NewsGridSliceSliceDefaultPrimary {
  /**
   * News field in *NewsGridSlice → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: news_grid_slice.default.primary.news[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  news: prismic.GroupField<Simplify<NewsGridSliceSliceDefaultPrimaryNewsItem>>;
}

/**
 * Default variation for NewsGridSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type NewsGridSliceSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<NewsGridSliceSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *NewsGridSlice*
 */
type NewsGridSliceSliceVariation = NewsGridSliceSliceDefault;

/**
 * NewsGridSlice Shared Slice
 *
 * - **API ID**: `news_grid_slice`
 * - **Description**: NewsGridSlice
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type NewsGridSliceSlice = prismic.SharedSlice<
  "news_grid_slice",
  NewsGridSliceSliceVariation
>;

/**
 * Primary content in *Showreel → Default → Primary*
 */
export interface ShowreelSliceDefaultPrimary {
  /**
   * video field in *Showreel → Default → Primary*
   *
   * - **Field Type**: file
   * - **Placeholder**: *None*
   * - **API ID Path**: showreel.default.primary.video
   */
  video: unknown;
}

/**
 * Default variation for Showreel Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ShowreelSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ShowreelSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Showreel*
 */
type ShowreelSliceVariation = ShowreelSliceDefault;

/**
 * Showreel Shared Slice
 *
 * - **API ID**: `showreel`
 * - **Description**: Showreel
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ShowreelSlice = prismic.SharedSlice<
  "showreel",
  ShowreelSliceVariation
>;

/**
 * Primary content in *StatsGrid → Items*
 */
export interface StatsGridSliceDefaultItem {
  /**
   * Слот (1,3,5,7) field in *StatsGrid → Items*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: stats_grid.items[].slot_index
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  slot_index: prismic.NumberField;

  /**
   * Видеофайл field in *StatsGrid → Items*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: stats_grid.items[].video_file
   * - **Documentation**: https://prismic.io/docs/fields/link-to-media
   */
  video_file: prismic.LinkToMediaField<prismic.FieldState, never>;
}

/**
 * Default variation for StatsGrid Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type StatsGridSliceDefault = prismic.SharedSliceVariation<
  "default",
  Record<string, never>,
  Simplify<StatsGridSliceDefaultItem>
>;

/**
 * Slice variation for *StatsGrid*
 */
type StatsGridSliceVariation = StatsGridSliceDefault;

/**
 * StatsGrid Shared Slice
 *
 * - **API ID**: `stats_grid`
 * - **Description**: StatsGrid
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type StatsGridSlice = prismic.SharedSlice<
  "stats_grid",
  StatsGridSliceVariation
>;

/**
 * Item in *TeamSlice → Default → Primary → Members*
 */
export interface TeamSliceSliceDefaultPrimaryMembersItem {
  /**
   * photo field in *TeamSlice → Default → Primary → Members*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: team_slice.default.primary.members[].photo
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  photo: prismic.ImageField<never>;

  /**
   * name field in *TeamSlice → Default → Primary → Members*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: team_slice.default.primary.members[].name
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  name: prismic.KeyTextField;

  /**
   * role field in *TeamSlice → Default → Primary → Members*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: team_slice.default.primary.members[].role
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  role: prismic.KeyTextField;
}

/**
 * Primary content in *TeamSlice → Default → Primary*
 */
export interface TeamSliceSliceDefaultPrimary {
  /**
   * title field in *TeamSlice → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: team_slice.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Members field in *TeamSlice → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: team_slice.default.primary.members[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  members: prismic.GroupField<
    Simplify<TeamSliceSliceDefaultPrimaryMembersItem>
  >;
}

/**
 * Default variation for TeamSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type TeamSliceSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<TeamSliceSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *TeamSlice*
 */
type TeamSliceSliceVariation = TeamSliceSliceDefault;

/**
 * TeamSlice Shared Slice
 *
 * - **API ID**: `team_slice`
 * - **Description**: TeamSlice
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type TeamSliceSlice = prismic.SharedSlice<
  "team_slice",
  TeamSliceSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      AboutDocument,
      AboutDocumentData,
      AboutDocumentDataSlicesSlice,
      BlogDocument,
      BlogDocumentData,
      BlogDocumentDataSlicesSlice,
      ProjectsDocument,
      ProjectsDocumentData,
      ProjectsDocumentDataSlicesSlice,
      WelcomeDocument,
      WelcomeDocumentData,
      WelcomeDocumentDataSlicesSlice,
      AllDocumentTypes,
      CaseFiltersSlice,
      CaseFiltersSliceDefaultItem,
      CaseFiltersSliceVariation,
      CaseFiltersSliceDefault,
      CaseGridSlice,
      CaseGridSliceDefaultPrimaryCasesTagsItem,
      CaseGridSliceDefaultPrimaryCasesItem,
      CaseGridSliceDefaultPrimary,
      CaseGridSliceVariation,
      CaseGridSliceDefault,
      CaseSlyderSlice,
      CaseSlyderSliceDefaultItem,
      CaseSlyderSliceVariation,
      CaseSlyderSliceDefault,
      HeroSliceSlice,
      HeroSliceSliceDefaultPrimary,
      HeroSliceSliceVariation,
      HeroSliceSliceDefault,
      NewsGridSliceSlice,
      NewsGridSliceSliceDefaultPrimaryNewsItem,
      NewsGridSliceSliceDefaultPrimary,
      NewsGridSliceSliceVariation,
      NewsGridSliceSliceDefault,
      ShowreelSlice,
      ShowreelSliceDefaultPrimary,
      ShowreelSliceVariation,
      ShowreelSliceDefault,
      StatsGridSlice,
      StatsGridSliceDefaultItem,
      StatsGridSliceVariation,
      StatsGridSliceDefault,
      TeamSliceSlice,
      TeamSliceSliceDefaultPrimaryMembersItem,
      TeamSliceSliceDefaultPrimary,
      TeamSliceSliceVariation,
      TeamSliceSliceDefault,
    };
  }
}
